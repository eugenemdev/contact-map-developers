{"version":3,"sources":["js/Utilits.js","App.js","index.js"],"names":["Utils","this","document","event","element","func","addEventListener","attachEvent","App","useEffect","console","log","boundariesColor","color","fill","MyComponent","map","useMap","L","tileLayer","attribution","addTo","activeIcon","icon","iconUrl","iconSize","inactiveIcon","ActivePeoples","geoJson","persons","pointToLayer","feature","latlng","isActive","marker","bindPopup","properties","name","username","age","company","address","description","Subscribe","openPopup","inactivePeoples","boundariesLayer","geoJSON","boundaries","style","clusters","markerClusterGroup","addLayer","MapContainer","className","center","zoom","maxZoom","ReactDOM","render","getElementById"],"mappings":"gTAEqBA,E,WAEjB,aAAgB,oBACZC,KAAKC,SAAWA,S,6CAGpB,SAAUC,EAAOC,EAASC,GAClBD,EAAQE,iBACRF,EAAQE,iBAAiBH,EAAOE,GAAM,GAC/BD,EAAQG,YACfH,EAAQG,YAAY,KAAOJ,EAAOE,GAElCD,EAAQ,KAAOD,GAASE,M,YCFrB,SAASG,IAKtBC,qBAAU,WACRC,QAAQC,IAAI,mDACX,IAEH,IACMC,EAAkB,CAAEC,MAAO,SAAUC,MAAM,GAGlD,SAASC,IACR,IAAMC,EAAMC,cAOZC,IAAEC,UAAU,qDAAsD,CAChEC,YAAa,4FACZC,MAAML,GAqBT,IAAIM,EAAaJ,IAAEK,KAAK,CACtBC,QAAS,wBACTC,SAAU,CAAC,GAAG,MAGZC,EAAeR,IAAEK,KAAK,CACxBC,QAAS,6BACTC,SAAU,CAAC,GAAG,MAOVE,EAAgBT,IAAEU,QAAQC,EAAQ,CACpCC,aAAc,SAASC,EAAQC,GAC7B,GAAID,EAAQE,SAAS,CAEnB,IAAIC,EAAShB,IAAEgB,OAAOF,EAAO,CAACT,KAAMD,IAEpCY,EAAOC,UAAU,SAAUJ,EAAQK,WAAWC,KAA7B,eACON,EAAQK,WAAWE,SAD1B,aAEKP,EAAQK,WAAWG,IAFxB,iBAGSR,EAAQK,WAAWI,QAH5B,iBAIST,EAAQK,WAAWK,QAC3C,QAAUV,EAAQK,WAAWM,YAAc,MAS/B,IAAI1C,GACV2C,UAAU,QAAST,GAJzB,WACIA,EAAOU,eAQb,OAAOV,KAKTW,EAAkB3B,IAAEU,QAAQC,EAAQ,CACtCC,aAAc,SAASC,EAAQC,GAC7B,IAAKD,EAAQE,SAAS,CACtB,IAAIC,EAAShB,IAAEgB,OAAOF,EAAO,CAACT,KAAMG,IACpCQ,EAAOC,UAAU,SAAUJ,EAAQK,WAAWC,KAA7B,eACON,EAAQK,WAAWE,SAD1B,aAEKP,EAAQK,WAAWG,IAFxB,iBAGSR,EAAQK,WAAWI,QAH5B,iBAIST,EAAQK,WAAWK,QAC3C,QAAUV,EAAQK,WAAWM,YAAc,MAQ/B,IAAI1C,GACV2C,UAAU,QAAST,GAJvB,WACEA,EAAOU,eAOb,OAAOV,KAuBNY,EAAkB5B,IAAE6B,QAAQC,EAAY,CAC3CC,MAAO,SAASlB,GACZ,OAAOnB,KAKTsC,EAAWhC,IAAEiC,qBAOnB,OANED,EAASE,SAASzB,GAClBuB,EAASE,SAASP,GAClBK,EAASE,SAASN,GAClB9B,EAAIoC,SAASF,GAGR,KAUP,OAEA,eAACG,EAAA,EAAD,CAAcC,UAAU,oBAAoBC,OAvJ7B,CAAC,QAAS,OAuJmCC,KArJ/C,EAqJ2DC,QAAS,GAAjF,UACA,cAAC1C,EAAD,IAEA,cAAC,IAAD,OC1KF2C,IAASC,OACL,cAAC,EAAD,IACFzD,SAAS0D,eAAe,U","file":"static/js/main.7be88c56.chunk.js","sourcesContent":["'use strict'\n\nexport default class Utils {\n\n    constructor () {     \n        this.document = document\n    }\n\n    Subscribe(event, element, func) {\n        if (element.addEventListener) {\n            element.addEventListener(event, func, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, func);\n        } else {\n            element['on' + event] = func;\n        }\n      }\n    \n\n}\n\n\n","import React, { Component, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport boundaries from \"./data/boundaries.json\"\nimport persons from \"./data/persons.json\"\nimport L from 'leaflet';\nimport { MapContainer, Polygon, useMap} from 'react-leaflet'\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport Utils from './js/Utilits';\n\n\n\nexport default function App() {\n  \n  /**\n   * hook for changing component\n   */\n  useEffect(() => {\n    console.log('This is called when the component is mounted!');\n  }, []);\n\n  const center = [51.5167, 9.917];      \n  const boundariesColor = { color: \"orange\", fill: false};\n  const zoom = 4;\n\n function MyComponent() {\n  const map = useMap()\n  //console.log('map center:', map.getCenter())\n\n  /**\n   * start Layer without boundaries\n   */\n\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  }).addTo(map);\n\n\n  /*\n  var withBoundary = function(providerName) {\n     return L.TileLayer.BoundaryCanvas.createFromLayer(      \n        L.tileLayer.provider(providerName),\n        {boundary: boundaries, trackAttribution: true}\n    )\n}\n\n  L.control.layers({\n  'OpenStreetMap.DE': withBoundary('OpenStreetMap.DE').addTo(map)\n  //'Stamen.Watercolor': withBoundary('Stamen.Watercolor'),\n  //'Esri.WorldStreetMap': withBoundary('Esri.WorldStreetMap'),\n  //'MapQuestOpen.Aerial': withBoundary('MapQuestOpen.Aerial')\n  }, null, {collapsed: false}).addTo(map);\n  */\n\n\n\n  var activeIcon = L.icon({\n    iconUrl: './img/marker-icon.png',\n    iconSize: [25,41]\n  });\n  \n  var inactiveIcon = L.icon({\n    iconUrl: './img/marker-icon-gray.png',\n    iconSize: [25,41]\n  });\n\n  //L.marker([51.5167, 9,917]).addTo(map)\n  //  .bindPopup('Center of Germany')\n  //  .openPopup();\n\n    var ActivePeoples = L.geoJson(persons,{\n      pointToLayer: function(feature,latlng){\n        if (feature.isActive){\n        \n          var marker = L.marker(latlng,{icon: activeIcon});        \n                  \n          marker.bindPopup(\"Name: \"+ feature.properties.name + \n            '<br/>' + \"Surname\" + feature.properties.username +\n            '<br/>' + \"Age: \" + feature.properties.age +\n            '<br/>' + \"Company: \" + feature.properties.company +\n            '<br/>' + \"Address: \" + feature.properties.address + \n            '<br/>' + feature.properties.description + ' '\n            );\n\n            \n            //marker.openPopup() doesnt work in Safari\n            //this is some hook             \n            function func () {\n                marker.openPopup();\n            }          \n            var utils = new Utils();\n            utils.Subscribe('click', marker, func);          \n\n          \n          }        \n          \n          return marker;\n      }\n\n    });\n\n    var inactivePeoples = L.geoJson(persons,{      \n      pointToLayer: function(feature,latlng){\n        if (!feature.isActive){\n        var marker = L.marker(latlng,{icon: inactiveIcon});        \n        marker.bindPopup(\"Name: \"+ feature.properties.name + \n          '<br/>' + \"Surname\" + feature.properties.username +\n          '<br/>' + \"Age: \" + feature.properties.age +\n          '<br/>' + \"Company: \" + feature.properties.company +\n          '<br/>' + \"Address: \" + feature.properties.address + \n          '<br/>' + feature.properties.description + ' '\n          );\n        \n        //marker.openPopup() doesnt work in Safari\n            //this is some hook             \n            function func () {\n              marker.openPopup();\n          }          \n          var utils = new Utils();\n          utils.Subscribe('click', marker, func);          \n\n         \n        }\n        return marker;\n      }\n    });\n\n    /*\n      var groupColors = L.geoJson( persons, {\n        style: function(feature){\n          var fillColor,\n              density = feature.properties.density;\n          if ( density > 80 ) fillColor = \"#006837\";\n          else if ( density > 40 ) fillColor = \"#31a354\";\n          else if ( density > 20 ) fillColor = \"#78c679\";\n          else if ( density > 10 ) fillColor = \"#c2e699\";\n          else if ( density > 0 ) fillColor = \"#ffffcc\";\n          else fillColor = \"#f7f7f7\";  // no data\n          return { color: \"#999\", weight: 1, fillColor: fillColor, fillOpacity: .6 };\n        },\n        onEachFeature: function( feature, layer ){\n          layer.bindPopup( \"<strong>\" + feature.properties.name + \"</strong><br/>\" + feature.properties.density + \" rats per square mile\" )\n        }\n      }) \n      */\n\n     var boundariesLayer = L.geoJSON(boundaries, {\n      style: function(feature) {\n          return boundariesColor;          \n          }\n      });  \n\n\n    var clusters = L.markerClusterGroup();\n    clusters.addLayer(ActivePeoples);\n    clusters.addLayer(inactivePeoples);\n    clusters.addLayer(boundariesLayer);\n    map.addLayer(clusters);\n\n  \n  return null\n}\n\n  /**\n   * <TileLayer\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n  />\n   */\n\n  return (\n  \n  <MapContainer className=\"markercluster-map\" center={center} zoom={zoom} maxZoom={18}>\n  <MyComponent />\n    \n  <MarkerClusterGroup/>\n</MapContainer>\n\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}