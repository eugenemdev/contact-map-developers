{"version":3,"sources":["components/Utils/Utilits.js","components/ContactMap/Contactmap.js","components/App/App.js","index.js"],"names":["Utils","this","document","event","element","func","addEventListener","attachEvent","ContactMap","useEffect","console","log","boundariesColor","color","fill","MyComponent","map","useMap","latLngGeom","boundaries","geometry","activeIcon","L","TileLayer","boundaryCanvas","boundary","attribution","addTo","icon","iconUrl","iconSize","ActivePeoples","geoJson","persons","pointToLayer","feature","latlng","isActive","marker","bindPopup","properties","name","username","age","company","address","description","Subscribe","openPopup","boundariesLayer","geoJSON","style","clusters","markerClusterGroup","addLayer","MapContainer","className","center","zoom","maxZoom","App","ReactDOM","render","getElementById"],"mappings":"unqIAEqBA,E,WAEjB,aAAgB,oBACZC,KAAKC,SAAWA,S,6CAGpB,SAAUC,EAAOC,EAASC,GAClBD,EAAQE,iBACRF,EAAQE,iBAAiBH,EAAOE,GAAM,GAC/BD,EAAQG,YACfH,EAAQG,YAAY,KAAOJ,EAAOE,GAElCD,EAAQ,KAAOD,GAASE,M,mCCFrB,SAASG,IAKtBC,qBAAU,WACRC,QAAQC,IAAI,mDACX,IAEH,IACMC,EAAkB,CAAEC,MAAO,SAAUC,MAAM,GAGlD,SAASC,IAER,IAAMC,EAAMC,cAWNC,EAAaC,EAAWC,SAY1BC,GAPQC,IAAEC,UAAUC,eAHT,gEAGgC,CAC7CC,SAAUP,EACVQ,YAJqB,4FAKlBC,MAAMX,GAIMM,IAAEM,KAAK,CACtBC,QAAS,wBACTC,SAAU,CAAC,GAAG,OAYVC,GATaT,IAAEM,KAAK,CACxBC,QAAS,6BACTC,SAAU,CAAC,GAAG,MAOMR,IAAEU,QAAQC,EAAQ,CACpCC,aAAc,SAASC,EAAQC,GAC7B,GAAID,EAAQE,SAAS,CAEnB,IAAIC,EAAShB,IAAEgB,OAAOF,EAAO,CAACR,KAAMP,IAEpCiB,EAAOC,UAAU,SAAUJ,EAAQK,WAAWC,KAA7B,eACON,EAAQK,WAAWE,SAD1B,aAEKP,EAAQK,WAAWG,IAFxB,iBAGSR,EAAQK,WAAWI,QAH5B,iBAIST,EAAQK,WAAWK,QAC3C,QAAUV,EAAQK,WAAWM,YAAc,MAS/B,IAAI9C,GACV+C,UAAU,QAAST,GAJzB,WACIA,EAAOU,eAQb,OAAOV,MAiCRW,EAAkB3B,IAAE4B,QAAQ/B,EAAY,CAC3CgC,MAAO,SAAShB,GACZ,OAAOvB,KAKTwC,EAAW9B,IAAE+B,qBAMjB,OALAD,EAASE,SAASvB,GAElBqB,EAASE,SAASL,GAClBjC,EAAIsC,SAASF,GAEN,KAGT,OAEA,eAACG,EAAA,EAAD,CAAcC,UAAU,oBAAoBC,OAxH7B,CAAC,QAAS,OAwHmCC,KAtH/C,EAsH2DC,QAAS,GAAjF,UACA,cAAC5C,EAAD,IAEA,cAAC,IAAD,OC1Ia,SAAS6C,IAGtB,OACA,cAACpD,EAAD,ICLFqD,IAASC,OACL,cAAC,EAAD,IACF5D,SAAS6D,eAAe,U","file":"static/js/main.0ef2d154.chunk.js","sourcesContent":["'use strict'\n\nexport default class Utils {\n\n    constructor () {     \n        this.document = document\n    }\n\n    Subscribe(event, element, func) {\n        if (element.addEventListener) {\n            element.addEventListener(event, func, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, func);\n        } else {\n            element['on' + event] = func;\n        }\n      }\n    \n\n}\n\n\n","import React, { Component, useEffect } from 'react';\nimport L from 'leaflet';\nimport { MapContainer,  useMap} from 'react-leaflet'\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport Utils from '../Utils/Utilits';\n\nimport boundaries from \"../../data/boundaries.json\"\nimport persons from \"../../data/persons.json\"\n\nimport 'leaflet-boundary-canvas';\n\n\nexport default function ContactMap() {\n  \n  /**\n   * hook for changing component\n   */\n  useEffect(() => {\n    console.log('This is called when the component is mounted!');\n  }, []);\n\n  const center = [51.5167, 9.917];      \n  const boundariesColor = { color: \"orange\", fill: false};\n  const zoom = 6;\n\n function MyComponent() {\n  \n  const map = useMap()\n  //console.log('map center:', map.getCenter())\n  \n    /**\n    * start Layer without boundaries\n    */\n\n    //L.tileLayer('https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png', {\n    //  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    //}).addTo(map);\n\n    var latLngGeom = boundaries.geometry; //Define real geometry here\n    // var map = L.map('map').setView(center, zoom),\n    var osmUrl = 'https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png';\n    var osmAttribution = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\n\n    var osm = L.TileLayer.boundaryCanvas(osmUrl, {\n    boundary: latLngGeom, \n    attribution: osmAttribution\n    }).addTo(map);\n\n\n\n  var activeIcon = L.icon({\n    iconUrl: './img/marker-icon.png',\n    iconSize: [25,41]\n  });\n  \n  var inactiveIcon = L.icon({\n    iconUrl: './img/marker-icon-gray.png',\n    iconSize: [25,41]\n  });\n\n  //L.marker([51.5167, 9,917]).addTo(map)\n  //  .bindPopup('Center of Germany')\n  //  .openPopup();\n\n    var ActivePeoples = L.geoJson(persons,{\n      pointToLayer: function(feature,latlng){\n        if (feature.isActive){\n        \n          var marker = L.marker(latlng,{icon: activeIcon});        \n                  \n          marker.bindPopup(\"Name: \"+ feature.properties.name + \n            '<br/>' + \"Surname\" + feature.properties.username +\n            '<br/>' + \"Age: \" + feature.properties.age +\n            '<br/>' + \"Company: \" + feature.properties.company +\n            '<br/>' + \"Address: \" + feature.properties.address + \n            '<br/>' + feature.properties.description + ' '\n            );\n\n            \n            //marker.openPopup() doesnt work in Safari\n            //this is some hook             \n            function func () {\n                marker.openPopup();\n            }          \n            var utils = new Utils();\n            utils.Subscribe('click', marker, func);          \n\n          \n          }        \n          \n          return marker;\n      }\n\n    });\n\n    /*\n    var inactivePeoples = L.geoJson(persons,{      \n      pointToLayer: function(feature,latlng){\n        if (!feature.isActive){\n        var marker = L.marker(latlng,{icon: inactiveIcon});        \n        marker.bindPopup(\"Name: \"+ feature.properties.name + \n          '<br/>' + \"Surname\" + feature.properties.username +\n          '<br/>' + \"Age: \" + feature.properties.age +\n          '<br/>' + \"Company: \" + feature.properties.company +\n          '<br/>' + \"Address: \" + feature.properties.address + \n          '<br/>' + feature.properties.description + ' '\n          );\n        \n        //marker.openPopup() doesnt work in Safari\n            //this is some hook             \n            function func () {\n              marker.openPopup();\n          }          \n          var utils = new Utils();\n          utils.Subscribe('click', marker, func);          \n\n         \n        }\n        return marker;\n      }\n    });\n    */\n\n     var boundariesLayer = L.geoJSON(boundaries, {\n      style: function(feature) {\n          return boundariesColor;          \n          }\n      });  \n\n\n    var clusters = L.markerClusterGroup();\n    clusters.addLayer(ActivePeoples);\n    // clusters.addLayer(inactivePeoples);\n    clusters.addLayer(boundariesLayer);\n    map.addLayer(clusters);\n\n    return null\n}\n\n  return (\n  \n  <MapContainer className=\"markercluster-map\" center={center} zoom={zoom} maxZoom={18}>\n  <MyComponent />\n    \n  <MarkerClusterGroup/>\n</MapContainer>\n\n  );\n}","import React from 'react';\nimport \"./App.css\";\n\nimport \"../ContactMap/Contactmap\"\nimport ContactMap from '../ContactMap/Contactmap';\n\nexport default function App() {\n  \n\n  return (\n  <ContactMap />\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}