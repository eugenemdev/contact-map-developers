{"version":3,"sources":["components/SearchControl/SearchControlList.js","components/SearchControl/SearchControl.js","components/Utils/Utilits.js","components/ContactMap/Contactmap.js","components/App/App.js","index.js"],"names":["SearchControlList","props","state","keys","activelist","this","showList","setState","className","Component","SearchControl","isSearchVisible","isCloseButtonVisible","isWrapperList","inputValue","clickOpenSearchButton","bind","clickCloseButton","pressKeyInput","event","onClick","viewBox","x1","y1","x2","y2","cx","cy","r","fill","type","placeholder","onKeyPress","onChange","e","target","value","d","Utils","document","element","func","addEventListener","attachEvent","ContactMap","useEffect","boundariesColor","color","ContactMapComponent","map","useMap","latLngGeom","boundaries","geometry","activeIcon","L","TileLayer","boundaryCanvas","boundary","attribution","addTo","icon","iconUrl","iconSize","ActivePeoples","geoJson","persons","pointToLayer","feature","latlng","marker","bindPopup","properties","name","username","age","company","address","description","Subscribe","openPopup","boundariesLayer","geoJSON","style","clusters","markerClusterGroup","addLayer","MapContainer","center","zoom","maxZoom","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f66e9637.chunk.js","sourcesContent":["import React, { Component }  from 'react';\n\n\nexport default class SearchControlList extends Component {\n    \n    constructor(props) {\n        super(props);     \n        this.state = {\n            //date: new Date(),\n            keys: \"\",\n            activelist: \"closed\"\n        };\n    }\n    \n    componentDidUpdate(){\n        if(this.state.activelist != this.props.activelist){\n            this.showList();\n        }\n    }\n\n    showList(){\n        this.setState({\n            activelist: this.props.activelist\n          });\n    }\n\nrender() {\n    return (\n        <ul className=\"search-control-info-list\">            \n            <li className=\"search-control-info-list-item\">keys: {this.props.keys} visible: {this.props.activelist}</li>          \n            <li className=\"search-control-info-list-item\">keys: {this.props.keys} visible: {this.props.activelist}</li>          \n            <li className=\"search-control-info-list-item\">keys: {this.props.keys} visible: {this.props.activelist}</li>          \n            <li className=\"search-control-info-list-item\">keys: {this.props.keys} visible: {this.props.activelist}</li>          \n        </ul>\n    );\n    }\n}\n\n//<li className=\"search-control-info-list-item\">{this.state.date.toLocaleTimeString()}</li>\n//setInterval(tick, 1000);\n//<li className=\"search-control-info-list-item\">{this.props.visible}</li>\n\n\n  \n\n","import React, {Component} from 'react';\nimport SearchControlList from './SearchControlList'\nimport './search-control.css'\n\nexport default class SearchControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSearchVisible: false,\n            isCloseButtonVisible: false,\n            isWrapperList: \"closed\",\n            inputValue: \"\"\n        };\n\n        //bind for callbacks\n        this.clickOpenSearchButton = this.clickOpenSearchButton.bind(this);\n        this.clickCloseButton = this.clickCloseButton.bind(this);\n        this.pressKeyInput = this.pressKeyInput.bind(this);\n    }\n\n    clickOpenSearchButton() {\n        this.setState(state => ({\n            isSearchVisible: !state.isSearchVisible,\n            isWrapperList: \"closed\",\n            inputValue: \"\"\n        }));\n    }\n\n\n    clickCloseButton() {\n        this.setState(state => ({\n            isCloseButtonVisible: !state.isCloseButtonVisible,\n            isSearchVisible: false,\n            isWrapperList: \"closed\",\n            inputValue: ''\n        }));\n    }\n\n    pressKeyInput(event) {\n        \n        //visible close button \n        this.setState(state => ({\n            isCloseButtonVisible: true,\n            isWrapperList: \"opened\",\n        }));\n\n\n        //console.log(event.key)\n        //if(event.keyCode == 13)        \n    }\n\n    render() {\n      return (\n      <div className=\"search-box\">\n        <article className=\"search-control-wrap\">  \n            <section className={this.state.isSearchVisible?\"search-control search-control-active\":\"search-control\"}>\n                <button className=\"search-control-icon-button\" \n                    onClick={this.clickOpenSearchButton}>                \n                    <svg viewBox=\"0 0 50 50\">\n                        <line x1=\"35\" y1=\"35\" x2=\"46\" y2=\"46\"/>\n                        <circle cx=\"23\" cy=\"23\" r=\"16\" fill=\"none\"></circle> \n                            Sorry, your browser does not support inline SVG.\n                    </svg>                    \n                </button>                \n                <input \n                    type=\"text\" \n                    className=\"search-input search-control-input\" \n                    placeholder=\"custom placeholder\" \n                    onKeyPress={this.pressKeyInput}\n                    onChange={e => this.setState({ inputValue: e.target.value })} \n                    value={this.state.inputValue}/>                \n                <button className={ this.state.isCloseButtonVisible ? \"search-control-close-button search-control-close-button-active\": \"search-control-close-button\"} onClick={this.clickCloseButton}>\n                    <svg viewBox=\"0 0 50 50\">\n                        <path d=\"M5 5 L45 45 M45 5 L5 45\"/>\n                        Sorry, your browser does not support inline SVG.\n                    </svg>\n                </button>\n            </section>\n            <section className={this.state.isWrapperList==\"opened\"?\"search-control-info-wrapper\":\"search-control-info-wrapper search-control-info-wrapper-close\"} >\n                <section className=\"search-control-info\">            \n                    <SearchControlList \n                        activelist={this.state.isWrapperList} \n                        keys={this.state.inputValue}\n                    />\n                </section>            \n            </section>    \n        </article>\n     </div>\n      );\n    }\n  }\n","'use strict'\n\nexport default class Utils {\n\n    constructor () {     \n        this.document = document\n    }\n\n    Subscribe(event, element, func) {\n        if (element.addEventListener) {\n            element.addEventListener(event, func, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, func);\n        } else {\n            element['on' + event] = func;\n        }\n      }\n    \n\n}\n\n\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport L from 'leaflet';\nimport { MapContainer,  useMap} from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport SearchControl from '../SearchControl/SearchControl';\n\nimport Utils from '../Utils/Utilits';\nimport boundaries from \"../../data/boundaries.json\";\nimport persons from \"../../data/persons.json\";\n\n\nimport 'leaflet-boundary-canvas';\n\n\nexport default function ContactMap() {\n\n  /**\n   * hook for changing component\n   * is called only from function and not from class\n   */\n\n  useEffect(() => {\n    //console.log('This is called when the component is mounted!');\n  }, []);\n\n  const center = [51.5167, 9.917];\n  const boundariesColor = {\n    color: \"orange\",\n    fill: false\n  };\n  const zoom = 6;\n\n  //name ContactMapComponent is important to doing with hook and define map from useMap();\n  function ContactMapComponent() {\n    const map = useMap()\n    //console.log('map center:', map.getCenter())\n\n    var latLngGeom = boundaries.geometry; //Define real geometry here\n    var osmUrl = 'https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png';\n    var osmAttribution = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\n\n    var osm = L.TileLayer.boundaryCanvas(osmUrl, {\n      boundary: latLngGeom,\n      attribution: osmAttribution\n    }).addTo(map);\n\n\n    var activeIcon = L.icon({\n      iconUrl: './img/marker-icon.png',\n      iconSize: [25, 41]\n    });\n\n    var inactiveIcon = L.icon({\n      iconUrl: './img/marker-icon-gray.png',\n      iconSize: [25, 41]\n    });\n\n\n    var ActivePeoples = L.geoJson(persons, {\n      pointToLayer: function (feature, latlng) {\n        // if (feature.isActive){\n\n        var marker = L.marker(latlng, {\n          icon: activeIcon\n        });\n\n        marker.bindPopup(\"Name: \" + feature.properties.name +\n          '<br/>' + \"Surname: \" + feature.properties.username +\n          '<br/>' + \"Age: \" + feature.properties.age +\n          '<br/>' + \"Company: \" + feature.properties.company +\n          '<br/>' + \"Address: \" + feature.properties.address +\n          '<br/>' + feature.properties.description + ' '\n        );\n\n        //marker.openPopup() doesnt work in Safari\n        //this is some hook             \n        function func() {\n          marker.openPopup();\n        }        \n        var utils = new Utils();\n        utils.Subscribe('click', marker, func);\n        \n        \n        return marker;\n      }\n\n    });\n\n    var boundariesLayer = L.geoJSON(boundaries, {\n      style: function (feature) {\n        return boundariesColor;\n      }\n    });\n\n\n    var clusters = L.markerClusterGroup();\n    clusters.addLayer(ActivePeoples);\n    // clusters.addLayer(inactivePeoples);\n    clusters.addLayer(boundariesLayer);\n    map.addLayer(clusters);\n\n    //add search controls to the DOM \n    //new SearchControl();\n\n    return null\n  }\n\n  \n  return (\n    <div>\n      <MapContainer className=\"markercluster-map\" center={center} zoom={zoom} maxZoom={18}>\n        <ContactMapComponent />         \n        <MarkerClusterGroup/>        \n      </MapContainer>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport \"./App.css\";\nimport ContactMap from '../ContactMap/Contactmap';\nimport SearchControl from '../SearchControl/SearchControl'\n\n \nclass App extends Component {\n  constructor(props) {\n    super(props);       \n  }\n\n  render() {\n    const greeting = 'Welcome to React';\n    return (\n      <div>\n        <SearchControl/>      \n        <ContactMap/>\n      </div>\n    );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}