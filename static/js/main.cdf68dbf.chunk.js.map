{"version":3,"sources":["components/SearchControl/SearchControl.js","components/Utils/Utilits.js","components/ContactMap/Contactmap.js","components/App/App.js","index.js"],"names":["SearchControl","this","isInputActive","onLoad","clickHandle","document","querySelectorAll","addEventListener","event","classList","add","existsUl","getElementsByClassName","sectionList","li","createElement","className","innerText","appendChild","ul","e","buttonSearch","searchedList","remove","value","firstChild","removeChild","classNode","getElementById","el","innerHTML","insertBefore","Utils","element","func","attachEvent","ContactMap","useEffect","boundariesColor","color","fill","ContactMapComponent","map","useMap","latLngGeom","boundaries","geometry","activeIcon","L","TileLayer","boundaryCanvas","boundary","attribution","addTo","icon","iconUrl","iconSize","ActivePeoples","geoJson","persons","pointToLayer","feature","latlng","marker","bindPopup","properties","name","username","age","company","address","description","Subscribe","openPopup","boundariesLayer","geoJSON","style","clusters","markerClusterGroup","addLayer","MapContainer","center","zoom","maxZoom","App","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.cdf68dbf.chunk.js","sourcesContent":["import './search-control.css'\n\nclass SearchControl {\n\n  constructor() {\n    this.isInputActive = false;\n    this.onLoad();\n    this.clickHandle();\n  }\n\n\n  clickHandle() {\n\n    //bechavior for input block\n    const InputBlock = document.querySelectorAll('input[inputBlock]');\n\n    InputBlock[0].addEventListener('keydown', function (event) {\n      const buttonClose = document.querySelectorAll('a[closeButton]');\n      buttonClose[0].classList.add('search-control-close-button-active');\n\n      //add keys from input\n      //console.log(event.key)\n\n      const existsUl = document.getElementsByClassName('search-control-info-list');\n      const sectionList = document.getElementsByClassName('search-control-info');\n\n      var li = document.createElement('li');\n      li.className = 'search-control-info-list-item'\n      li.innerText = 'search-control\\'s test'\n\n      if (existsUl[0]) {\n        existsUl[0].appendChild(li);\n\n      } else {\n\n        var ul = document.createElement('ul');\n        ul.className = 'search-control-info-list';\n        ul.appendChild(li)\n\n        sectionList[0].appendChild(ul);\n      }\n\n    });\n\n    //bechavior for search button\n    const searchButton = document.querySelectorAll('a[searchButton]');\n\n    searchButton[0].addEventListener('click', function (e) {\n      const buttonSearch = document.querySelectorAll('section[searchInput]');\n      const searchedList = document.querySelectorAll('section[list]');\n      if (!this.isInputActive) {\n        buttonSearch[0].classList.add('search-control-active');\n        this.isInputActive = true;\n      } else {\n        buttonSearch[0].classList.remove('search-control-active');\n\n        const inputControl = document.querySelectorAll('input[inputBlock]');\n        inputControl[0].value = '';\n\n\n        while (searchedList[0].firstChild) {\n          searchedList[0].removeChild(searchedList[0].firstChild);\n        }\n\n        this.isInputActive = false;\n      }\n    });\n\n    //bechavior for close button\n    const closeButton = document.querySelectorAll('a[closeButton]');\n    closeButton[0].addEventListener('click', function (e) {\n\n      const buttonSearch = document.querySelectorAll('section[searchInput]');\n      buttonSearch[0].classList.remove('search-control-active');\n\n      const inputControl = document.querySelectorAll('input[inputBlock]');\n      inputControl[0].value = '';\n\n      const buttonClose = document.querySelectorAll('a[closeButton]');\n      buttonClose[0].classList.remove('search-control-close-button-active');\n\n      const searchedList = document.querySelectorAll('section[list]');\n      while (searchedList[0].firstChild) {\n        searchedList[0].removeChild(searchedList[0].firstChild);\n      }\n    });\n\n\n  }\n\n  onLoad() {\n    var html = `\n    <article class=\"search-control-wrap\">\n      <section searchInput class=\"search-control\">\n        <a role=\"button\" href=\"#\" searchButton class=\"search-control-icon-button\">\n          <svg viewBox=\"0 0 50 50\"><line x1=\"35\" y1=\"35\" x2=\"46\" y2=\"46\">\n            </line><circle cx=\"23\" cy=\"23\" r=\"16\" fill=\"none\">\n            </circle>Sorry, your browser does not support inline SVG.\n          </svg>\n        </a>\n        <input type=\"text\" inputBlock class=\"search-input search-control-input\" placeholder=\"Custom placeholder\" value=\"\" style=\"outline: none;\"></input>\n        <a closeButton role=\"button\" class=\"search-control-close-button\">\n          <svg viewBox=\"0 0 50 50\">\n            <path d=\"M5 5 L45 45 M45 5 L5 45\"></path>\n              Sorry, your browser does not support inline SVG.\n          </svg>\n        </a>\n      </section>\n      <section list class=\"search-control-info\">\n      </section>\n    </article>`\n\n\n\n    var classNode = document.getElementById('root')\n    var el = document.createElement('div');\n    el.className = 'search-box'\n    el.innerHTML = html\n    classNode.insertBefore(el, classNode.firstChild);\n  }\n\n}\n\nexport default SearchControl;","'use strict'\n\nexport default class Utils {\n\n    constructor () {     \n        this.document = document\n    }\n\n    Subscribe(event, element, func) {\n        if (element.addEventListener) {\n            element.addEventListener(event, func, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, func);\n        } else {\n            element['on' + event] = func;\n        }\n      }\n    \n\n}\n\n\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport L from 'leaflet';\nimport { MapContainer,  useMap} from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport SearchControl from '../SearchControl/SearchControl';\n\nimport Utils from '../Utils/Utilits';\nimport boundaries from \"../../data/boundaries.json\";\nimport persons from \"../../data/persons.json\";\n\n\nimport 'leaflet-boundary-canvas';\n\n\nexport default function ContactMap() {\n\n  /**\n   * hook for changing component\n   * is called only from function and not from class\n   */\n\n  useEffect(() => {\n    //console.log('This is called when the component is mounted!');\n  }, []);\n\n  const center = [51.5167, 9.917];\n  const boundariesColor = {\n    color: \"orange\",\n    fill: false\n  };\n  const zoom = 6;\n\n  //name ContactMapComponent is important to doing with hook and define map from useMap();\n  function ContactMapComponent() {\n    const map = useMap()\n    //console.log('map center:', map.getCenter())\n\n    var latLngGeom = boundaries.geometry; //Define real geometry here\n    var osmUrl = 'https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png';\n    var osmAttribution = '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\n\n    var osm = L.TileLayer.boundaryCanvas(osmUrl, {\n      boundary: latLngGeom,\n      attribution: osmAttribution\n    }).addTo(map);\n\n\n    var activeIcon = L.icon({\n      iconUrl: './img/marker-icon.png',\n      iconSize: [25, 41]\n    });\n\n    var inactiveIcon = L.icon({\n      iconUrl: './img/marker-icon-gray.png',\n      iconSize: [25, 41]\n    });\n\n\n    var ActivePeoples = L.geoJson(persons, {\n      pointToLayer: function (feature, latlng) {\n        // if (feature.isActive){\n\n        var marker = L.marker(latlng, {\n          icon: activeIcon\n        });\n\n        marker.bindPopup(\"Name: \" + feature.properties.name +\n          '<br/>' + \"Surname: \" + feature.properties.username +\n          '<br/>' + \"Age: \" + feature.properties.age +\n          '<br/>' + \"Company: \" + feature.properties.company +\n          '<br/>' + \"Address: \" + feature.properties.address +\n          '<br/>' + feature.properties.description + ' '\n        );\n\n        //marker.openPopup() doesnt work in Safari\n        //this is some hook             \n        function func() {\n          marker.openPopup();\n        }        \n        var utils = new Utils();\n        utils.Subscribe('click', marker, func);\n        \n        \n        return marker;\n      }\n\n    });\n\n    var boundariesLayer = L.geoJSON(boundaries, {\n      style: function (feature) {\n        return boundariesColor;\n      }\n    });\n\n\n    var clusters = L.markerClusterGroup();\n    clusters.addLayer(ActivePeoples);\n    // clusters.addLayer(inactivePeoples);\n    clusters.addLayer(boundariesLayer);\n    map.addLayer(clusters);\n\n    //add search controls to the DOM \n    new SearchControl();\n\n    return null\n  }\n\n  \n  return (\n    <div>\n      <MapContainer className=\"markercluster-map\" center={center} zoom={zoom} maxZoom={18}>\n        <ContactMapComponent />         \n        <MarkerClusterGroup/>        \n      </MapContainer>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport \"./App.css\";\nimport \"../ContactMap/Contactmap\"\nimport ContactMap from '../ContactMap/Contactmap';\n\n \nclass App extends Component {\n  render() {\n    const greeting = 'Welcome to React';\n    return (\n      <ContactMap/>\n    );\n  }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}